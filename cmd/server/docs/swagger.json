{
    "swagger": "2.0",
    "info": {
        "description": "Payments API microservice",
        "title": "PaymentsAPI",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/auth/signin": {
            "post": {
                "description": "Signing up new User",
                "tags": [
                    "auth"
                ],
                "summary": "SignIn",
                "parameters": [
                    {
                        "description": "Sign up request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignInRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sign up succeeded",
                        "schema": {
                            "$ref": "#/definitions/auth.SignInResponse200Body"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {}
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/auth/signup": {
            "post": {
                "description": "Signing up new User",
                "tags": [
                    "auth"
                ],
                "summary": "SignUp",
                "parameters": [
                    {
                        "description": "Sign up request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.SignUpRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sign up succeeded",
                        "schema": {
                            "$ref": "#/definitions/auth.SignUpResponse200Body"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {}
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/customer/create": {
            "post": {
                "description": "Create new customer",
                "tags": [
                    "customer"
                ],
                "summary": "Create Customer",
                "parameters": [
                    {
                        "description": "Create customer request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customer.CreateCustomerRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create customer succeeded",
                        "schema": {
                            "$ref": "#/definitions/customer.CreateCustomerResponse200Body"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {}
                    },
                    "409": {
                        "description": "Customer already exists",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/customer/list": {
            "get": {
                "description": "List customers",
                "tags": [
                    "customer"
                ],
                "summary": "Get list of customers",
                "responses": {
                    "200": {
                        "description": "List customers succeeded",
                        "schema": {
                            "$ref": "#/definitions/customer.ListCustomerResponse200Body"
                        }
                    },
                    "404": {
                        "description": "Customers not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/customer/update": {
            "put": {
                "description": "Update existing customer",
                "tags": [
                    "customer"
                ],
                "summary": "Update Customer",
                "parameters": [
                    {
                        "description": "Update customer request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customer.UpdateCustomerRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update customer succeeded",
                        "schema": {
                            "$ref": "#/definitions/customer.UpdateCustomerResponse200Body"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {}
                    },
                    "409": {
                        "description": "Customer already exists",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/customer/{telegram_id}": {
            "get": {
                "description": "Get customer by telegram_id",
                "tags": [
                    "customer"
                ],
                "summary": "Get Customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Telegram ID of the customer",
                        "name": "telegram_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get customer succeeded",
                        "schema": {
                            "$ref": "#/definitions/customer.GetCustomerResponse200Body"
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/subscription/create-sub": {
            "post": {
                "description": "Create Subscription for customer",
                "tags": [
                    "subscription"
                ],
                "summary": "Create Subscription",
                "parameters": [
                    {
                        "description": "Create subscription request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/liqpay.CreateSubRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create subscription succeeded",
                        "schema": {
                            "$ref": "#/definitions/liqpay.CreateSubResponseBody"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/subscription/delete-sub": {
            "delete": {
                "description": "Delete Subscription for customer",
                "tags": [
                    "subscription"
                ],
                "summary": "Delete Subscription",
                "parameters": [
                    {
                        "description": "Delete subscription request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/liqpay.DeleteSubRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete subscription succeeded",
                        "schema": {
                            "$ref": "#/definitions/liqpay.DeleteSubResponseBody"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/subscription/update-sub": {
            "put": {
                "description": "Update Subscription for customer",
                "tags": [
                    "subscription"
                ],
                "summary": "Update Subscription",
                "parameters": [
                    {
                        "description": "Update subscription request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/liqpay.UpdateSubRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update subscription succeeded",
                        "schema": {
                            "$ref": "#/definitions/liqpay.UpdateSubResponseBody"
                        }
                    },
                    "400": {
                        "description": "Client error",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/subscription/{telegram_id}": {
            "get": {
                "description": "Get subscription by telegram_id",
                "tags": [
                    "subscription"
                ],
                "summary": "Get Subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Telegram ID of the customer",
                        "name": "telegram_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get subscription succeeded",
                        "schema": {
                            "$ref": "#/definitions/liqpay.GetSubResponse200Body"
                        }
                    },
                    "404": {
                        "description": "Subscription not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.SignInRequestBody": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "example": "12345678"
                }
            }
        },
        "auth.SignInResponse200Body": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.SignUpRequestBody": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 8,
                    "example": "12345678"
                }
            }
        },
        "auth.SignUpResponse200Body": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/user.User"
                }
            }
        },
        "customer.CreateCustomerRequestBody": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "telegram_id": {
                    "type": "string",
                    "example": "123456789"
                }
            }
        },
        "customer.CreateCustomerResponse200Body": {
            "type": "object",
            "properties": {
                "customer": {
                    "$ref": "#/definitions/customer.Customer"
                }
            }
        },
        "customer.Customer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00+09:00"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "telegram_id": {
                    "type": "string",
                    "example": "123456789"
                }
            }
        },
        "customer.GetCustomerResponse200Body": {
            "type": "object",
            "properties": {
                "customer": {
                    "$ref": "#/definitions/customer.Customer"
                }
            }
        },
        "customer.ListCustomerResponse200Body": {
            "type": "object",
            "properties": {
                "customers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/customer.Customer"
                    }
                }
            }
        },
        "customer.UpdateCustomerRequestBody": {
            "type": "object",
            "properties": {
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "telegram_id": {
                    "type": "string",
                    "example": "123456789"
                }
            }
        },
        "customer.UpdateCustomerResponse200Body": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "OK"
                }
            }
        },
        "liqpay.CreateSubRequestBody": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "число більше 0",
                    "type": "number"
                },
                "card": {
                    "type": "string"
                },
                "card_cvv": {
                    "type": "string"
                },
                "card_exp_month": {
                    "type": "string"
                },
                "card_exp_year": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "order_id": {
                    "description": "validate:\"orderid\"` // має бути символ розподілювача : TODO fix validation",
                    "type": "string"
                },
                "phone": {
                    "description": "Телефон вказується в міжнародному форматі (Україна +380). Наприклад: +380950000001 (з +) або 380950000001 (без +)",
                    "type": "string"
                },
                "subscribe": {
                    "description": "ціле число більше 1",
                    "type": "string"
                },
                "subscribe_date_start": {
                    "description": "Час необхідно вказувати в такому форматі 2015-03-31 00:00:00 по UTC",
                    "type": "string"
                },
                "subscribe_periodicity": {
                    "description": "Можливі значення: day - щодня, week - щотижня, month - раз на місяць, year - раз на рік",
                    "type": "string"
                }
            }
        },
        "liqpay.CreateSubResponseBody": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/liqpay.LPCreateSub"
                }
            }
        },
        "liqpay.DeleteSubRequestBody": {
            "type": "object",
            "properties": {
                "order_id": {
                    "description": "validate:\"orderid\"` // має бути символ розподілювача : TODO fix validation",
                    "type": "string"
                }
            }
        },
        "liqpay.DeleteSubResponseBody": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/liqpay.LPDeleteSub"
                }
            }
        },
        "liqpay.GetSubResponse200Body": {
            "type": "object",
            "properties": {
                "subscription": {
                    "$ref": "#/definitions/subscription.Subscription"
                }
            }
        },
        "liqpay.LPCreateSub": {
            "type": "object",
            "properties": {
                "acq_id": {
                    "type": "integer"
                },
                "action": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "liqpay_order_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "payment_id": {
                    "type": "integer"
                },
                "receiver_commission": {
                    "type": "number"
                },
                "result": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "liqpay.LPDeleteSub": {
            "type": "object",
            "properties": {
                "acq_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "liqpay.LPUpdateSub": {
            "type": "object",
            "properties": {
                "acq_id": {
                    "type": "integer"
                },
                "action": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "liqpay_order_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "payment_id": {
                    "type": "integer"
                },
                "receiver_commission": {
                    "type": "number"
                },
                "result": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "liqpay.UpdateSubRequestBody": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "число більше 0",
                    "type": "number"
                },
                "card": {
                    "type": "string"
                },
                "card_cvv": {
                    "type": "string"
                },
                "card_exp_month": {
                    "type": "string"
                },
                "card_exp_year": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "order_id": {
                    "description": "validate:\"orderid\"` // має бути символ розподілювача : TODO fix validation",
                    "type": "string"
                },
                "phone": {
                    "description": "Телефон вказується в міжнародному форматі (Україна +380). Наприклад: +380950000001 (з +) або 380950000001 (без +)",
                    "type": "string"
                }
            }
        },
        "liqpay.UpdateSubResponseBody": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/liqpay.LPUpdateSub"
                }
            }
        },
        "subscription.Subscription": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subscribe": {
                    "type": "string"
                },
                "subscribe_date_end": {
                    "type": "string"
                },
                "subscribe_date_start": {
                    "type": "string"
                },
                "subscribe_periodicity": {
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-01-01T00:00:00+09:00"
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "0001M2PVBD5Q1DAMYJ0S2HADD6"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "pwd_hash": {
                    "type": "string",
                    "example": "$2a$10$pikzoSYzIs1GRRPi0vermeY1mPH4"
                }
            }
        }
    }
}